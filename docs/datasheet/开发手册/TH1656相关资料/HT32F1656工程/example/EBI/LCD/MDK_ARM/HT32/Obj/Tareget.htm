<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\HT32\Obj\Tareget.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\HT32\Obj\Tareget.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Thu Apr 19 16:45:27 2018
<BR><P>
<H3>Maximum Stack Usage =         40 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; LED_Init &rArr; CKCU_PeripClockConfig
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[4a]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[c]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">SysTick_Handler</a><BR>
 <LI><a href="#[26]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[26]">ADC_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[31]">BFTM0_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[32]">BFTM1_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[f]">BOD_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[7]">BusFault_Handler</a> from ht32f165x_it.o(i.BusFault_Handler) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[d]">CKRDY_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[25]">COMP_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[a]">DebugMon_Handler</a> from ht32f165x_it.o(i.DebugMon_Handler) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[46]">EBI_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[13]">EVWUP_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[15]">EXTI0_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[1f]">EXTI10_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[20]">EXTI11_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[21]">EXTI12_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[22]">EXTI13_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[23]">EXTI14_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[24]">EXTI15_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[16]">EXTI1_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[17]">EXTI2_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[18]">EXTI3_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[19]">EXTI4_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[1a]">EXTI5_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[1b]">EXTI6_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[1c]">EXTI7_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[1d]">EXTI8_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[1e]">EXTI9_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[12]">FLASH_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[2f]">GPTM0_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[30]">GPTM1_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from ht32f165x_it.o(i.HardFault_Handler) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[33]">I2C0_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[34]">I2C1_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[3c]">I2S_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[14]">LPWUP_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[e]">LVD_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[27]">MCTM0BRK_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[2a]">MCTM0CC_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[29]">MCTM0TR_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[28]">MCTM0UP_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[2b]">MCTM1BRK_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[2e]">MCTM1CC_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[2d]">MCTM1TR_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[2c]">MCTM1UP_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[6]">MemManage_Handler</a> from ht32f165x_it.o(i.MemManage_Handler) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from ht32f165x_it.o(i.NMI_Handler) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[3e]">PDMA_CH0_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[3f]">PDMA_CH1_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[40]">PDMA_CH2_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[41]">PDMA_CH3_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[42]">PDMA_CH4_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[43]">PDMA_CH5_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[44]">PDMA_CH6_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[45]">PDMA_CH7_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from ht32f165x_it.o(i.PendSV_Handler) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[11]">RTC_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[3b]">SCI_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[35]">SPI0_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[36]">SPI1_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from ht32f165x_it.o(i.SVC_Handler) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[c]">SysTick_Handler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[47]">SystemInit</a> from system_ht32f165x.o(i.SystemInit) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[39]">UART0_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[3a]">UART1_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[37]">USART0_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[38]">USART1_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[3d]">USB_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[8]">UsageFault_Handler</a> from ht32f165x_it.o(i.UsageFault_Handler) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[10]">WDT_IRQHandler</a> from startup_ht32f165x.o(RESET) referenced from startup_ht32f165x.o(RESET)
 <LI><a href="#[49]">__main</a> from __main.o(!!!main) referenced from startup_ht32f165x.o(RESET)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>BFTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>BFTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>CKRDY_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>EBI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EVWUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EXTI10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EXTI11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EXTI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXTI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EXTI7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXTI8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EXTI9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>GPTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>GPTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>LPWUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>MCTM0BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>MCTM0CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>MCTM0TR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>MCTM0UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>MCTM1BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>MCTM1CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>MCTM1TR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>MCTM1UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>PDMA_CH0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>PDMA_CH1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>PDMA_CH2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>PDMA_CH3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>PDMA_CH4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>PDMA_CH5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>PDMA_CH6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>PDMA_CH7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SCI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>USART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f165x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_ht32f165x.o(RESET))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[49]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4b]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[4d]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[64]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[65]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[4e]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[66]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[52]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[67]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[68]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[69]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[6a]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[6b]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[6c]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[6d]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[6e]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[6f]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[70]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[71]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[72]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[73]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[74]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[75]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[76]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[77]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[78]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[79]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[7a]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[7b]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[57]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[7c]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[7d]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[7e]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[7f]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[80]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[81]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[4c]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[82]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[4f]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[51]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[83]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[53]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; LED_Init &rArr; CKCU_PeripClockConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[84]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[5b]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[56]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[85]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[58]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[86]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[8a]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[55]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[8b]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[5a]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[8c]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>AFIO_GPxConfig</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, ht32f1655_56_gpio.o(i.AFIO_GPxConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AFIO_GPxConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
</UL>

<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f165x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>CKCU_PeripClockConfig</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, ht32f1655_56_ckcu.o(i.CKCU_PeripClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CKCU_PeripClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
</UL>

<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f165x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>GPIO_DirectionConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht32f1655_56_gpio.o(i.GPIO_DirectionConfig))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
</UL>

<P><STRONG><a name="[63]"></a>HT32F_DVB_LEDToggle</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ht32_board.o(i.HT32F_DVB_LEDToggle))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f165x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>LED_Init</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, led.o(i.LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LED_Init &rArr; CKCU_PeripClockConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DirectionConfig
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_PeripClockConfig
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_GPxConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f165x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f165x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f165x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f165x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>SYSTICK_ClockSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ht32_cm3_misc.o(i.SYSTICK_ClockSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
</UL>

<P><STRONG><a name="[47]"></a>SystemInit</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, system_ht32f165x.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f165x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f165x.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>_sys_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32_retarget.o(i._sys_exit))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[60]"></a>delay_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, delay.o(i.delay_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_init
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_ClockSourceConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>delay_ms</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, delay.o(i.delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>main</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = main &rArr; LED_Init &rArr; CKCU_PeripClockConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT32F_DVB_LEDToggle
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
